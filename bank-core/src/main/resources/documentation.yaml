openapi: 3.0.0
info:
  title: Banking API
  version: 1.0.0
paths:
  /client/account/{accountId}:
    get:
      summary: Get account details
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Account details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: Invalid account ID

  /client/userId/by-account/{accountId}:
    get:
      summary: Get user ID by account
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoDto'
        '400':
          description: Invalid account ID

  /client/openAccount/{userId}:
    post:
      summary: Open a new account
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountDTO'
      responses:
        '201':
          description: Account created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: Invalid user ID or request body
  /client/closeAccount/{accountId}:
    post:
      summary: Close an account
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Account closed successfully
        '400':
          description: Invalid account ID

  /client/deposit:
    post:
      summary: Deposit money into an account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositDTO'
      responses:
        '200':
          description: Deposit successful
        '400':
          description: Invalid request

  /client/withdraw:
    post:
      summary: Withdraw money from an account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawDTO'
      responses:
        '200':
          description: Withdrawal successful
        '400':
          description: Invalid request

  /client/transfer:
    post:
      summary: Transfer money between accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequestDTO'
      responses:
        '200':
          description: Transfer successful
        '400':
          description: Invalid request

  /client/transactions/{accountId}:
    get:
      summary: Get transactions for an account
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid account ID
  /client/accounts/{userId}:
    post:
      summary: Get accounts for a user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of user accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '400':
          description: Invalid user ID
  /employee/accounts:
    get:
      summary: Get a list of all accounts
      responses:
        '200':
          description: List of all accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'

  /employee/users:
    get:
      summary: Get all unique users with an account
      responses:
        '200':
          description: List of all unique users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserInfoDto'

  /employee/account/{accountId}/transactions:
    get:
      summary: Get transactions for a specific account
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of transactions for the account
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid account ID
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: integer
        accountNumber:
          type: string
        userId:
          type: string
        balance:
          type: number
          format: float
        currencyType:
          $ref: '#/components/schemas/CurrencyType'
        accountType:
          $ref: '#/components/schemas/AccountType'
        accountStatus:
          $ref: '#/components/schemas/AccountStatus'
        openingDate:
          type: string
          format: date-time
        interestRate:
          type: number
          format: float
    UserInfoDto:
      type: object
      properties:
        userId:
          type: string
    CreateAccountDTO:
      type: object
      properties:
        initialDeposit:
          type: number
        currencyType:
          $ref: '#/components/schemas/CurrencyType'
        accountType:
          $ref: '#/components/schemas/AccountType'
        interestRate:
          type: number
    DepositDTO:
      type: object
      properties:
        accountId:
          type: integer
        amount:
          type: number
        currencyType:
          $ref: '#/components/schemas/CurrencyType'
    WithdrawDTO:
      type: object
      properties:
        accountId:
          type: integer
        amount:
          type: number
        currencyType:
          $ref: '#/components/schemas/CurrencyType'
    TransferRequestDTO:
      type: object
      properties:
        fromAccountId:
          type: integer
        toAccountId:
          type: integer
        amount:
          type: number
        currencyType:
          $ref: '#/components/schemas/CurrencyType'
    Transaction:
      type: object
      properties:
        id:
          type: integer
        amount:
          type: number
        fromAccountId:
          type: integer
        toAccountId:
          type: integer
        transactionType:
          $ref: '#/components/schemas/TransactionType'
        currencyType:
          $ref: '#/components/schemas/CurrencyType'

  CurrencyType:
    type: string
    enum: [USD, EUR, RUB]
  AccountStatus:
    type: string
    enum: [ACTIVE, FROZEN, CLOSED]
  AccountType:
    type: string
    enum: [CURRENT_ACCOUNT, SAVINGS_ACCOUNT, FOREIGN_CURRENCY_ACCOUNT, LOAN_TYPE]
  TransactionType:
    type: string
    enum: [DEPOSIT, WITHDRAWAL, TRANSFER, LOAN_REPAYMENT]